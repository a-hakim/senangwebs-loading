/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["SWL"] = factory();
	else
		root["SWL"] = factory();
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/swl.js":
/*!***********************!*\
  !*** ./src/js/swl.js ***!
  \***********************/
/***/ (() => {

eval("// SenangWebs Loading Library\n\n(function () {\n  // --- Helper Functions (Defined Once) ---\n\n  function hexToRgba(hex, opacity) {\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n      return r + r + g + g + b + b;\n    });\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? \"rgba(\".concat(parseInt(result[1], 16), \", \").concat(parseInt(result[2], 16), \", \").concat(parseInt(result[3], 16), \", \").concat(opacity, \")\") : \"rgba(255, 255, 255, \".concat(opacity, \")\"); // Default fallback\n  }\n  function createSpinner(color) {\n    var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('class', 'swl-spinner');\n    svg.setAttribute('viewBox', '0 0 50 50');\n    svg.style.animation = 'swl-spin 1s linear infinite';\n    var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    circle.setAttribute('cx', '25');\n    circle.setAttribute('cy', '25');\n    circle.setAttribute('r', '20');\n    circle.setAttribute('fill', 'none');\n    circle.setAttribute('stroke', color);\n    circle.setAttribute('stroke-width', '5');\n    circle.setAttribute('stroke-linecap', 'round');\n    // Adjusted stroke-dasharray for a potentially more visible start\n    circle.setAttribute('stroke-dasharray', '80, 200');\n    circle.setAttribute('stroke-dashoffset', '0');\n    svg.appendChild(circle);\n    return svg;\n  }\n  function createPulse(color) {\n    var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('class', 'swl-pulse');\n    svg.setAttribute('viewBox', '0 0 50 50');\n    svg.style.animation = 'swl-pulse 1s ease-in-out infinite';\n    var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    circle.setAttribute('cx', '25');\n    circle.setAttribute('cy', '25');\n    circle.setAttribute('r', '20');\n    circle.setAttribute('fill', color);\n    svg.appendChild(circle);\n    return svg;\n  }\n  function createImage(url) {\n    var img = document.createElement('img');\n    img.src = url;\n    img.className = 'swl-image';\n    // Add basic error handling for images\n    img.onerror = function () {\n      console.error(\"SWL Error: Could not load image at \".concat(url));\n      img.remove(); // Remove broken image placeholder\n    };\n    return img;\n  }\n  function removeOverlayLogic(overlay, startTime, minDuration) {\n    var elapsedTime = Date.now() - startTime;\n    var remainingTime = Math.max(0, minDuration - elapsedTime);\n    setTimeout(function () {\n      overlay.remove(); // Original immediate removal\n    }, remainingTime);\n  }\n\n  // --- Main Logic ---\n\n  // Create shared style element\n  var style = document.createElement('style');\n  style.textContent = \"\\n    .swl-overlay {\\n      position: fixed !important;\\n      top: 0 !important;\\n      left: 0 !important;\\n      width: 100vw !important;\\n      height: 100vh !important;\\n      display: flex !important;\\n      justify-content: center !important;\\n      align-items: center !important;\\n      /* z-index is set dynamically */\\n    }\\n    .swl-backdrop {\\n      position: absolute !important;\\n      top: 0 !important;\\n      left: 0 !important;\\n      width: 100% !important;\\n      height: 100% !important;\\n      /* background-color and backdrop-filter set dynamically */\\n    }\\n    .swl-content {\\n      position: relative !important;\\n      z-index: 1 !important; /* Content above backdrop */\\n    }\\n    /* Define base dimensions for loaders */\\n    .swl-spinner, .swl-pulse, .swl-image {\\n      width: 50px !important;\\n      height: 50px !important;\\n      display: block; /* Ensure SVGs/Images behave predictably */\\n      margin: auto; /* Center if needed */\\n    }\\n    @keyframes swl-spin {\\n      0% { transform: rotate(0deg); }\\n      100% { transform: rotate(360deg); }\\n    }\\n    @keyframes swl-pulse {\\n      0% { transform: scale(0.8); opacity: 0.5; }\\n      50% { transform: scale(1); opacity: 1; }\\n      100% { transform: scale(0.8); opacity: 0.5; }\\n    }\\n  \";\n  // Prepend to head to ensure styles are available early\n  document.head.prepend(style);\n\n  // Find all SWL elements\n  var swlElements = document.querySelectorAll('[data-swl]');\n  swlElements.forEach(function (swlElement) {\n    var startTime = Date.now();\n\n    // Create overlay\n    var overlay = document.createElement('div');\n    overlay.className = 'swl-overlay';\n\n    // Create backdrop\n    var backdrop = document.createElement('div');\n    backdrop.className = 'swl-backdrop';\n\n    // Create content container\n    var content = document.createElement('div');\n    content.className = 'swl-content';\n    overlay.appendChild(backdrop);\n    overlay.appendChild(content);\n\n    // Move the SWL element's children to the content container\n    // Use DocumentFragment for potentially better performance with many children\n    var fragment = document.createDocumentFragment();\n    while (swlElement.firstChild) {\n      fragment.appendChild(swlElement.firstChild);\n    }\n    content.appendChild(fragment);\n\n    // Append overlay to body\n    document.body.appendChild(overlay);\n\n    // --- Configuration ---\n    var loaderType = swlElement.dataset.swlType || 'spinner';\n    var color = swlElement.dataset.swlColor || '#000000';\n    var minDuration = parseInt(swlElement.dataset.swlDuration, 10) || 0; // Always specify radix\n    var bgColor = swlElement.dataset.swlBgColor || 'white';\n    var bgOpacity = parseFloat(swlElement.dataset.swlBgOpacity) || 0.8;\n    var bgBlur = parseInt(swlElement.dataset.swlBgBlur, 10) || 0; // Always specify radix\n    var zIndex = parseInt(swlElement.dataset.swlZIndex, 10) || 9999; // Always specify radix\n\n    // --- Apply Styles ---\n    overlay.style.zIndex = zIndex;\n    backdrop.style.backgroundColor = bgColor.startsWith('#') ? hexToRgba(bgColor, bgOpacity) : \"rgba(\".concat(bgColor, \", \").concat(bgOpacity, \")\"); // Assumes 'r,g,b' format if not hex\n\n    if (bgBlur > 0) {\n      backdrop.style.backdropFilter = \"blur(\".concat(bgBlur, \"px)\");\n      backdrop.style.webkitBackdropFilter = \"blur(\".concat(bgBlur, \"px)\"); // For Safari\n    }\n\n    // --- Create Loader (if content is empty) ---\n    if (content.children.length === 0) {\n      var loaderElement; // Use different name to avoid conflict\n      switch (loaderType) {\n        case 'spinner':\n          loaderElement = createSpinner(color);\n          break;\n        case 'pulse':\n          loaderElement = createPulse(color);\n          break;\n        case 'image':\n          var imageUrl = swlElement.dataset.swlImage;\n          if (imageUrl) {\n            loaderElement = createImage(imageUrl);\n          } else {\n            console.warn('SWL Warning: data-swl-type=\"image\" requires data-swl-image attribute.');\n            loaderElement = createSpinner(color); // Fallback\n          }\n          break;\n        default:\n          console.warn(\"SWL Warning: Unknown data-swl-type \\\"\".concat(loaderType, \"\\\". Defaulting to spinner.\"));\n          loaderElement = createSpinner(color);\n      }\n      if (loaderElement) {\n        content.appendChild(loaderElement);\n      }\n    }\n\n    // --- Removal Logic ---\n    var handleRemove = function handleRemove() {\n      return removeOverlayLogic(overlay, startTime, minDuration);\n    };\n    if (document.readyState === 'complete') {\n      handleRemove();\n    } else {\n      // Add listener specific to this overlay instance\n      window.addEventListener('load', handleRemove, {\n        once: true\n      }); // Use { once: true } for auto-cleanup\n    }\n  });\n})();\n\n//# sourceURL=webpack://SWL/./src/js/swl.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/swl.js"]();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});